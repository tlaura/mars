{
  "version": 3,
  "file": "ngx-social-button.js.map",
  "sources": [
    "ng://ngx-social-button/lib/entities/baseLoginProviderImpl.ts",
    "ng://ngx-social-button/lib/entities/user.ts",
    "ng://ngx-social-button/lib/providers/facebookProvider.ts",
    "ng://ngx-social-button/lib/providers/googleProvider.ts",
    "ng://ngx-social-button/lib/providers/linkedinProvider.ts",
    "ng://ngx-social-button/lib/social.service.ts",
    "ng://ngx-social-button/lib/buttons/facebookLoginButton.ts",
    "ng://ngx-social-button/lib/buttons/googleLoginButton.ts",
    "ng://ngx-social-button/lib/buttons/linkedinLoginButton.ts",
    "ng://ngx-social-button/lib/buttons/facebookSharingButton.ts",
    "ng://ngx-social-button/lib/buttons/linkedinSharingButton.ts",
    "ng://ngx-social-button/lib/ngx-social-button.module.ts"
  ],
  "sourcesContent": [
    "import { LoginProvider } from './loginProvider';\nimport { SocialUser, LoginProviderClass } from './user';\n\nexport abstract class BaseLoginProviderImpl implements LoginProvider {\n\n\n    constructor() {}\n\n  abstract initialize(): Promise<SocialUser>;\n  abstract signIn(scopes?:[string]): Promise<SocialUser>;\n  abstract signOut(): Promise<any>;\n  abstract sharing(share?:any):Promise<any>;\n  abstract TYPE: string;\n\n  loadScript(obj: LoginProviderClass, onload: any): void {\n    if (document.getElementById(obj.name)) { return; }\n    let signInJS = document.createElement('script');\n    signInJS.async = true;\n    signInJS.src = obj.url;\n    signInJS.onload = onload;\n    if (obj.name === 'linkedin') {\n      signInJS.async = false;\n      signInJS.text = ('api_key: ' + obj.id).replace('\\'', '');\n    }\n    document.head.appendChild(signInJS);\n  }\n}",
    "export class SocialUser {\n    provider: string;\n    id: string;\n    email: string;\n    name: string;\n    image: string;\n    accessToken?: string;\n    idToken?: string\n  }\n  \n  export class LoginProviderClass {\n    name: string;\n    id: string;\n    url: string;\n  }\n  \n  export class LinkedInResponse {\n    emailAddress: string;\n    firstName: string;\n    id: string;\n    lastName: string;\n    pictureUrl: string;\n  }\n",
    "import { BaseLoginProviderImpl } from '../entities/baseLoginProviderImpl';\nimport { SocialUser, LoginProviderClass } from '../entities/user';\n\ndeclare let FB: any;\n\nexport class FacebookLoginProvider extends BaseLoginProviderImpl {\n\n  public static readonly PROVIDER_TYPE = 'facebook';\n  public static readonly SCOPES = {\n    EMAIL : 'email',\n    PUBLIC_PROFILE: 'public_profile'\n  };\n\n  public TYPE = 'facebook';\n  public loginProviderObj: LoginProviderClass = new LoginProviderClass();\n\n  constructor(private clientId: string) {\n    super();\n    this.loginProviderObj.id = clientId;\n    this.loginProviderObj.name = 'facebook';\n    this.loginProviderObj.url = 'https://connect.facebook.net/en_US/sdk.js';\n  }\n\n  initialize(): Promise<SocialUser> {\n    return new Promise((resolve, reject) => {\n      this.loadScript(this.loginProviderObj, () => {\n          FB.init({\n            appId: this.clientId,\n            autoLogAppEvents: true,\n            cookie: true,\n            xfbml: true,\n            version: 'v2.8'\n          });\n          FB.AppEvents.logPageView();\n\n          FB.getLoginStatus(function (response: any) {\n            if (response.status === 'connected') {\n              const accessToken = FB.getAuthResponse()['accessToken'];\n              FB.api('/me?fields=name,email,picture', (res: any) => {\n                resolve(FacebookLoginProvider.drawUser(Object.assign({}, {token: accessToken}, res)));\n              });\n            }\n          });\n        });\n    });\n  }\n\n  static drawUser(response: any): SocialUser {\n    let user: SocialUser = new SocialUser();\n    user.id = response.id;\n    user.name = response.name;\n    user.email = response.email;\n    user.accessToken = response.accessToken;\n    user.image = 'https://graph.facebook.com/' + response.id + '/picture?type=normal';\n    return user;\n  }\n\n\n  signIn(scopes?:[string]): Promise<SocialUser> {\n    return new Promise((resolve, reject) => {\n      FB.login((response: any) => {\n        console.log(\"facebook\", response);\n        if (response.authResponse) {\n          const accessToken = FB.getAuthResponse()['accessToken'];\n          FB.api('/me?fields=name,email,picture', (res: any) => {\n            console.log(\"me\", res);\n            resolve(FacebookLoginProvider.drawUser(Object.assign({}, {accessToken: accessToken}, res)));\n          });\n        }\n      }, { scope: scopes && scopes.length > 0 ? scopes.join(',') : 'email,public_profile' });\n    });\n  }\n\n  sharing(share?:any): Promise<any>{\n      return new Promise((resolve, reject) => {\n            FB.ui({\n                method: 'share',\n                href: share.href,\n                hashtag: (share.hashtag && share.hashtag.indexOf('#')>=0)?share.hashtag :  null\n            }, function(response){\n              console.log(response);\n              resolve();\n            });\n      });\n  }\n  signOut(): Promise<any> {\n    return new Promise((resolve, reject) => {\n      FB.logout((response: any) => {\n        resolve();\n      });\n    });\n  }\n\n}",
    "import {BaseLoginProviderImpl} from '../entities/baseLoginProviderImpl';\nimport {LoginProviderClass, SocialUser} from '../entities/user';\n\ndeclare let gapi: any;\n\nexport class GoogleLoginProvider extends BaseLoginProviderImpl {\n\n    public static readonly PROVIDER_TYPE = 'google';\n    public loginProviderObj: LoginProviderClass = new LoginProviderClass();\n    private auth2: any;\n    public TYPE = 'google';\n\n    constructor(private clientId: string) {\n        super();\n        this.loginProviderObj.id = clientId;\n        this.loginProviderObj.name = 'google';\n        this.loginProviderObj.url = 'https://apis.google.com/js/platform.js';\n    }\n\n    initialize(): Promise<SocialUser> {\n        return new Promise((resolve, reject) => {\n            this.loadScript(this.loginProviderObj, () => {\n                gapi.load('auth2', () => {\n                    this.auth2 = gapi.auth2.init({\n                        client_id: this.clientId,\n                        scope: 'email'\n                    });\n\n                    this.auth2.then(() => {\n                        if (this.auth2.isSignedIn.get()) {\n                            resolve(this.drawUser());\n                        }\n                    });\n                });\n            });\n        });\n    }\n\n    drawUser(): SocialUser {\n        const user: SocialUser = new SocialUser();\n        const profile = this.auth2.currentUser.get().getBasicProfile();\n        const authResponseObj = this.auth2.currentUser.get().getAuthResponse(true);\n        user.id = profile.getId();\n        user.name = profile.getName();\n        user.email = profile.getEmail();\n        user.image = profile.getImageUrl();\n        user.accessToken = authResponseObj.access_token;\n        user.idToken = authResponseObj.id_token;\n        return user;\n    }\n\n    signIn(scopes?: [string]): Promise<SocialUser> {\n        return new Promise((resolve, reject) => {\n            const promise = this.auth2.signIn();\n            promise.then(() => {\n                resolve(this.drawUser());\n            }).catch((err) => {\n                reject(err);\n            });\n        });\n    }\n\n    signOut(): Promise<any> {\n        return new Promise((resolve, reject) => {\n            this.auth2.signOut().then((err: any) => {\n                if (err) {\n                    reject(err);\n                } else {\n                    resolve();\n                }\n            });\n        });\n    }\n\n    sharing(share?: any): Promise<any> {\n        return new Promise((resolve, reject) => {\n            resolve();\n        });\n    }\n}\n",
    "import {SocialUser, LoginProviderClass, LinkedInResponse} from '../entities/user';\nimport {BaseLoginProviderImpl} from '../entities/baseLoginProviderImpl';\n\ndeclare let IN: any;\n\nexport class LinkedinLoginProvider extends BaseLoginProviderImpl {\n\n    public static readonly PROVIDER_TYPE = 'linkedin';\n    public loginProviderObj: LoginProviderClass = new LoginProviderClass();\n    TYPE = 'linkedin';\n\n    constructor(private clientId: string) {\n        super();\n        this.loginProviderObj.id = clientId;\n        this.loginProviderObj.name = 'linkedin';\n        this.loginProviderObj.url = 'https://platform.linkedin.com/in.js';\n    }\n\n    initialize(): Promise<SocialUser> {\n        return new Promise((resolve, reject) => {\n            this.loadScript(this.loginProviderObj, () => {\n                IN.init({\n                    api_key: this.clientId,\n                    authorize: true,\n                    onLoad: this.onLinkedInLoad()\n                });\n\n                IN.Event.on(IN, 'auth', () => {\n                    if (IN.User.isAuthorized()) {\n                        IN.API.Raw(\n                            '/people/~:(id,first-name,last-name,email-address,picture-url)'\n                        ).result((res: LinkedInResponse) => {\n                            resolve(this.drawUser(res));\n                        });\n                    }\n                });\n\n            });\n        });\n    }\n\n    onLinkedInLoad() {\n        IN.Event.on(IN, 'systemReady', () => {\n            IN.User.refresh();\n        });\n    }\n\n    drawUser(response: LinkedInResponse): SocialUser {\n\n        const user: SocialUser = new SocialUser();\n        user.id = response.id;\n        user.name = response.firstName + ' ' + response.lastName;\n        user.email = response.emailAddress;\n        user.image = response.pictureUrl;\n        user.accessToken = IN.ENV.auth.oauth_token;\n        return user;\n    }\n\n    signIn(): Promise<SocialUser> {\n        return new Promise((resolve, reject) => {\n            IN.User.authorize(() => {\n                IN.API.Raw('/people/~:(id,first-name,last-name,email-address,picture-url)').result((res) => {\n                    console.log('linkedin', res);\n                    resolve(this.drawUser(res));\n                });\n            });\n        });\n    }\n\n    signOut(): Promise<any> {\n        return new Promise((resolve, reject) => {\n            IN.User.logout((response: any) => {\n                resolve();\n            }, (err: any) => {\n                reject(err);\n            });\n        });\n    }\n\n\n    sharing(share?: any): Promise<any> {\n        return new Promise((resolve, reject) => {\n            const payload = {\n                'comment': share ? share.comment : '',\n                'visibility': {\n                    'code': 'anyone'\n                }\n            };\n            IN.API.Raw('/people/~/shares?format=json')\n                .method('POST')\n                .body(JSON.stringify(payload))\n                .result(data => {\n                    console.log('linkedin share', data);\n                    resolve();\n                })\n                .error(onError => {\n                    console.log('linkedin', onError);\n                });\n        });\n    }\n\n}\n",
    "import {Injectable} from '@angular/core';\n\nimport {BehaviorSubject, Observable} from 'rxjs';\n\nimport {LoginProvider} from './entities/loginProvider';\nimport {FacebookLoginProvider} from './providers/facebookProvider';\nimport {GoogleLoginProvider} from './providers/googleProvider';\nimport {LinkedinLoginProvider} from './providers/linkedinProvider';\n\nimport {SocialUser} from './entities/user';\n\nexport interface SocialServiceConfigItem {\n    provider: LoginProvider;\n}\n\n\nexport class SocialServiceConfig {\n    private providers: Map<string, LoginProvider> = new Map<string, LoginProvider>();\n\n    constructor(providers?: SocialServiceConfigItem[]) {\n        if (providers) {\n            for (let i = 0; i < providers.length; i++) {\n                const element = providers[i];\n                this.providers.set(element.provider.TYPE, element.provider);\n            }\n        }\n    }\n\n    getProviders() {\n        return this.providers;\n    }\n\n    private addProvider(provider: LoginProvider) {\n        if (!this.providers.get(provider.TYPE)) {\n            this.providers.set(provider.TYPE, provider);\n        }\n\n    }\n\n    addFacebook(clientId: string): SocialServiceConfig {\n        this.addProvider(new FacebookLoginProvider(clientId));\n        return this;\n    }\n\n    addGoogle(clientId: string): SocialServiceConfig {\n        this.addProvider(new GoogleLoginProvider(clientId));\n        return this;\n    }\n\n    addLinkedIn(clientId: string): SocialServiceConfig {\n        this.addProvider(new LinkedinLoginProvider(clientId));\n        return this;\n    }\n\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class SocialService {\n\n    private static readonly LOGIN_PROVIDER_NOT_FOUND = 'Login provider not found';\n    private static readonly USER_POPUP_CLOSE = 'User close the popup';\n\n    private providers: Map<string, LoginProvider>;\n\n    private _user: SocialUser = null;\n    private _authState: BehaviorSubject<SocialUser> = new BehaviorSubject(null);\n\n    get authState(): Observable<SocialUser> {\n        return this._authState.asObservable();\n    }\n\n    constructor(config: SocialServiceConfig) {\n        this.providers = config.getProviders();\n        this.providers.forEach((provider: LoginProvider, key: string) => {\n            provider.initialize().then((user: SocialUser) => {\n                user.provider = key;\n                this._user = user;\n                this._authState.next(user);\n            }).catch((err) => {\n                // this._authState.next(null);\n            });\n        });\n    }\n\n    isSocialLoggedIn() {\n        return (this._user != null);\n    }\n\n\n    sharing(providerType: string, share?: any) {\n        return new Promise((resolve, reject) => {\n            let providerObject = this.providers.get(providerType);\n            if (providerObject) {\n                providerObject.sharing(share).then(() => {\n                    resolve(true);\n                });\n            } else {\n                reject(SocialService.LOGIN_PROVIDER_NOT_FOUND);\n            }\n        });\n    }\n\n    facebookSharing(share?: any) {\n        return this.sharing('facebook', share);\n    }\n\n    // linkedinSharing(share?: any) {\n    //     return this.sharing('linkedin', share);\n    // }\n\n    signIn(providerType: string, scopes?: [string]): Promise<SocialUser> {\n        return new Promise((resolve, reject) => {\n            let providerObject = this.providers.get(providerType);\n            if (providerObject) {\n                providerObject.signIn(scopes).then((user: SocialUser) => {\n                    user.provider = providerType;\n                    resolve(user);\n                    this._user = user;\n                    this._authState.next(user);\n                }).catch((err) => {\n                    reject(SocialService.USER_POPUP_CLOSE);\n                });\n            } else {\n                reject(SocialService.LOGIN_PROVIDER_NOT_FOUND);\n            }\n        });\n    }\n\n    signOut(): Promise<any> {\n        return new Promise((resolve, reject) => {\n            if (this._user && this._user.provider) {\n                let providerType = this._user.provider;\n                let providerObject = this.providers.get(providerType);\n                providerObject.signOut().then(() => {\n                    this._user = null;\n                    this._authState.next(null);\n                    resolve();\n                }).catch((err) => {\n                    this._authState.next(null);\n                });\n            } else {\n                reject(SocialService.LOGIN_PROVIDER_NOT_FOUND);\n            }\n        });\n    }\n\n}\n",
    "import { Component, OnInit, Input, Output, EventEmitter} from '@angular/core';\nimport {SocialService} from '../social.service';\nimport { SocialUser } from '../entities';\n@Component({\n  selector: 'facebook-login-button',\n  template: `\n      <button [className]=\"style == 'round' ? 'social-btn facebook ' : 'button btn-block loginBtn --facebook '\"\n              (click)=\"socialSignIn()\" type=\"button\">\n          {{style == 'round' ? '': text ? text : 'Login with Facebook'}}</button>\n  `,\n    styles: [`.button{font-family:Lato,\"Lucida Grande\",\"Lucida Sans Unicode\",Tahoma,Sans-Serif;-webkit-appearance:none;display:inline-block;outline:0;border-radius:3px;border:3px solid transparent;cursor:pointer;text-overflow:ellipsis;text-decoration:none!important;font-weight:400!important}.loginBtn{box-sizing:border-box;position:relative;margin:.2em;padding:0 15px 0 46px;border:none;text-align:left;line-height:34px;white-space:nowrap;border-radius:3px;font-size:16px;color:#fff}.loginBtn:before{content:\"\";box-sizing:border-box;position:absolute;top:0;left:0;width:34px;height:100%}.loginBtn:focus{outline:0}.loginBtn:active{box-shadow:inset 0 0 0 32px rgba(0,0,0,.1)}.shareBtn{box-sizing:border-box;position:relative;margin:.2em;padding:0 15px 0 46px;border:none;text-align:left;line-height:34px;white-space:nowrap;border-radius:3px;font-size:16px;color:#fff}.shareBtn:before{content:\"\";box-sizing:border-box;position:absolute;top:0;left:0;width:34px;height:100%}.shareBtn:focus{outline:0}.shareBtn:active{box-shadow:inset 0 0 0 32px rgba(0,0,0,.1)}.--facebook{background-color:#4c69ba;background-image:linear-gradient(#4c69ba,#3b55a0);text-shadow:0 -1px 0 #354c8c}.--facebook:before{border-right:1px solid #364e92;background:url(https://s3-us-west-2.amazonaws.com/s.cdpn.io/14082/icon_facebook.png) 6px 6px no-repeat}.--facebook:focus,.--facebook:hover{background-color:#5b7bd5;background-image:linear-gradient(#5b7bd5,#4864b1)}.--google{background:#dd4b39}.--google:before{border-right:1px solid #bb3f30;background:url(https://s3-us-west-2.amazonaws.com/s.cdpn.io/14082/icon_google.png) 6px 6px no-repeat}.--google:focus,.--google:hover{background:#e74b37}.--linkedin{background:#007bb6}.--linkedin:before{border-right:1px solid #007bb6;background:url(https://content.linkedin.com/content/dam/developer/global/en_US/site/img/signin-button.png) -3px -3px no-repeat}.--linkedin:focus,.--linkedin:hover{background:linear-gradient(#007bb6,#4864b1)}.social-btn{width:50px;height:50px;background-size:cover;background-repeat:no-repeat;cursor:pointer;border-radius:10px;border:none}.social-btn.facebook{background-image:url(https://raw.githubusercontent.com/JohnnieLi/ngx-social-button/master/assets/facebook.png)}.social-btn.google{background-image:url(https://raw.githubusercontent.com/JohnnieLi/ngx-social-button/master/assets/google.png)}.social-btn.linkedin{background-image:url(https://raw.githubusercontent.com/JohnnieLi/ngx-social-button/master/assets/LinkedIn.png)}.social-btn.wechat{background-image:url(https://github.com/JohnnieLi/ngx-social-button/blob/master/assets/wechat.png?raw=true)}`],\n})\nexport class FacebookLoginButton implements OnInit {\n\n  @Input() size: string;\n  @Input() text: string;\n  @Input() style: string;\n  @Input() scopes: [string];\n  @Output() socialUser = new EventEmitter<SocialUser>();\n\n  constructor(private socialAuthService: SocialService) { }\n\n  ngOnInit() {\n\n  }\n\n  public socialSignIn() {    \n    this.socialAuthService.signIn('facebook', this.scopes).then(\n      (userData:SocialUser) => {\n        console.log(\"socialSignIn\", userData);\n       this.socialUser.emit(userData)\n      }\n    ).catch(()=>{\n        this.socialUser.emit(null);\n    });\n  }\n\n}\n",
    "import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {SocialService} from '../social.service';\nimport {SocialUser} from '../entities';\n\n@Component({\n    selector: 'google-login-button',\n    template: `\n\t\t<button [className]=\"style == 'round' ? 'social-btn google' : 'button btn-block loginBtn --google'\"\n\t\t        (click)=\"socialSignIn()\" type=\"button\">\n\t\t\t{{style == 'round' ? '':  text ? text : 'Login with Google'}}\n\t\t</button>\n    `, styles: [`.button{font-family:Lato,\"Lucida Grande\",\"Lucida Sans Unicode\",Tahoma,Sans-Serif;-webkit-appearance:none;display:inline-block;outline:0;border-radius:3px;border:3px solid transparent;cursor:pointer;text-overflow:ellipsis;text-decoration:none!important;font-weight:400!important}.loginBtn{box-sizing:border-box;position:relative;margin:.2em;padding:0 15px 0 46px;border:none;text-align:left;line-height:34px;white-space:nowrap;border-radius:3px;font-size:16px;color:#fff}.loginBtn:before{content:\"\";box-sizing:border-box;position:absolute;top:0;left:0;width:34px;height:100%}.loginBtn:focus{outline:0}.loginBtn:active{box-shadow:inset 0 0 0 32px rgba(0,0,0,.1)}.shareBtn{box-sizing:border-box;position:relative;margin:.2em;padding:0 15px 0 46px;border:none;text-align:left;line-height:34px;white-space:nowrap;border-radius:3px;font-size:16px;color:#fff}.shareBtn:before{content:\"\";box-sizing:border-box;position:absolute;top:0;left:0;width:34px;height:100%}.shareBtn:focus{outline:0}.shareBtn:active{box-shadow:inset 0 0 0 32px rgba(0,0,0,.1)}.--facebook{background-color:#4c69ba;background-image:linear-gradient(#4c69ba,#3b55a0);text-shadow:0 -1px 0 #354c8c}.--facebook:before{border-right:1px solid #364e92;background:url(https://s3-us-west-2.amazonaws.com/s.cdpn.io/14082/icon_facebook.png) 6px 6px no-repeat}.--facebook:focus,.--facebook:hover{background-color:#5b7bd5;background-image:linear-gradient(#5b7bd5,#4864b1)}.--google{background:#dd4b39}.--google:before{border-right:1px solid #bb3f30;background:url(https://s3-us-west-2.amazonaws.com/s.cdpn.io/14082/icon_google.png) 6px 6px no-repeat}.--google:focus,.--google:hover{background:#e74b37}.--linkedin{background:#007bb6}.--linkedin:before{border-right:1px solid #007bb6;background:url(https://content.linkedin.com/content/dam/developer/global/en_US/site/img/signin-button.png) -3px -3px no-repeat}.--linkedin:focus,.--linkedin:hover{background:linear-gradient(#007bb6,#4864b1)}.social-btn{width:50px;height:50px;background-size:cover;background-repeat:no-repeat;cursor:pointer;border-radius:10px;border:none}.social-btn.facebook{background-image:url(https://raw.githubusercontent.com/JohnnieLi/ngx-social-button/master/assets/facebook.png)}.social-btn.google{background-image:url(https://raw.githubusercontent.com/JohnnieLi/ngx-social-button/master/assets/google.png)}.social-btn.linkedin{background-image:url(https://raw.githubusercontent.com/JohnnieLi/ngx-social-button/master/assets/LinkedIn.png)}.social-btn.wechat{background-image:url(https://github.com/JohnnieLi/ngx-social-button/blob/master/assets/wechat.png?raw=true)}`],\n\n})\nexport class GoogleLoginButton implements OnInit {\n\n    @Input() size: string;\n    @Input() style: string;\n    @Input() text: string;\n    @Input() scopes: [string];\n    @Output() socialUser = new EventEmitter<SocialUser>();\n\n    constructor(private socialAuthService: SocialService) {\n    }\n\n    ngOnInit() {\n\n    }\n\n    public socialSignIn() {\n        this.socialAuthService.signIn('google', this.scopes).then(\n            (userData) => {\n                this.socialUser.emit(userData);\n            }\n        ).catch(() => {\n            this.socialUser.emit(null);\n        });\n    }\n\n}\n",
    "import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {SocialService} from '../social.service';\nimport {SocialUser} from '../entities';\n\n@Component({\n    selector: 'linkedin-login-button',\n    template: `\n\t\t<button [className]=\"style == 'round' ? 'social-btn linkedin' : 'button btn-block loginBtn --linkedin'\"\n\t\t        (click)=\"socialSignIn()\" type=\"button\">\n\t\t\t{{style == 'round' ? '':  text ? text : 'Login with LinkedIn'}}\n\t\t</button>\n    `, styles: [`.button{font-family:Lato,\"Lucida Grande\",\"Lucida Sans Unicode\",Tahoma,Sans-Serif;-webkit-appearance:none;display:inline-block;outline:0;border-radius:3px;border:3px solid transparent;cursor:pointer;text-overflow:ellipsis;text-decoration:none!important;font-weight:400!important}.loginBtn{box-sizing:border-box;position:relative;margin:.2em;padding:0 15px 0 46px;border:none;text-align:left;line-height:34px;white-space:nowrap;border-radius:3px;font-size:16px;color:#fff}.loginBtn:before{content:\"\";box-sizing:border-box;position:absolute;top:0;left:0;width:34px;height:100%}.loginBtn:focus{outline:0}.loginBtn:active{box-shadow:inset 0 0 0 32px rgba(0,0,0,.1)}.shareBtn{box-sizing:border-box;position:relative;margin:.2em;padding:0 15px 0 46px;border:none;text-align:left;line-height:34px;white-space:nowrap;border-radius:3px;font-size:16px;color:#fff}.shareBtn:before{content:\"\";box-sizing:border-box;position:absolute;top:0;left:0;width:34px;height:100%}.shareBtn:focus{outline:0}.shareBtn:active{box-shadow:inset 0 0 0 32px rgba(0,0,0,.1)}.--facebook{background-color:#4c69ba;background-image:linear-gradient(#4c69ba,#3b55a0);text-shadow:0 -1px 0 #354c8c}.--facebook:before{border-right:1px solid #364e92;background:url(https://s3-us-west-2.amazonaws.com/s.cdpn.io/14082/icon_facebook.png) 6px 6px no-repeat}.--facebook:focus,.--facebook:hover{background-color:#5b7bd5;background-image:linear-gradient(#5b7bd5,#4864b1)}.--google{background:#dd4b39}.--google:before{border-right:1px solid #bb3f30;background:url(https://s3-us-west-2.amazonaws.com/s.cdpn.io/14082/icon_google.png) 6px 6px no-repeat}.--google:focus,.--google:hover{background:#e74b37}.--linkedin{background:#007bb6}.--linkedin:before{border-right:1px solid #007bb6;background:url(https://content.linkedin.com/content/dam/developer/global/en_US/site/img/signin-button.png) -3px -3px no-repeat}.--linkedin:focus,.--linkedin:hover{background:linear-gradient(#007bb6,#4864b1)}.social-btn{width:50px;height:50px;background-size:cover;background-repeat:no-repeat;cursor:pointer;border-radius:10px;border:none}.social-btn.facebook{background-image:url(https://raw.githubusercontent.com/JohnnieLi/ngx-social-button/master/assets/facebook.png)}.social-btn.google{background-image:url(https://raw.githubusercontent.com/JohnnieLi/ngx-social-button/master/assets/google.png)}.social-btn.linkedin{background-image:url(https://raw.githubusercontent.com/JohnnieLi/ngx-social-button/master/assets/LinkedIn.png)}.social-btn.wechat{background-image:url(https://github.com/JohnnieLi/ngx-social-button/blob/master/assets/wechat.png?raw=true)}`],\n\n})\nexport class LinkedinLoginButton implements OnInit {\n\n    @Input() size: string;\n    @Input() style: string;\n    @Input() text: string;\n    @Input() scopes: [string];\n    @Output() socialUser = new EventEmitter<SocialUser>();\n\n    constructor(private socialAuthService: SocialService) {\n    }\n\n    ngOnInit() {\n\n    }\n\n    public socialSignIn() {\n        this.socialAuthService.signIn('linkedin', this.scopes).then(\n            (userData) => {\n                this.socialUser.emit(userData);\n            }\n        ).catch(() => {\n            this.socialUser.emit(null);\n        });\n    }\n\n}\n",
    "import {Component, OnInit, Input, Output, EventEmitter, Inject} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\n\nimport {SocialService} from '../social.service';\n\n@Component({\n    selector: 'facebook-share-button',\n    template: `\n      <button class=\"button btn-block loginBtn --facebook\" \n              (click)=\"sharing()\" type=\"button\">Share</button>\n  `,\n    styles: [`.button{font-family:Lato,\"Lucida Grande\",\"Lucida Sans Unicode\",Tahoma,Sans-Serif;-webkit-appearance:none;display:inline-block;outline:0;border-radius:3px;border:3px solid transparent;cursor:pointer;text-overflow:ellipsis;text-decoration:none!important;font-weight:400!important}.loginBtn{box-sizing:border-box;position:relative;margin:.2em;padding:0 15px 0 46px;border:none;text-align:left;line-height:34px;white-space:nowrap;border-radius:3px;font-size:16px;color:#fff}.loginBtn:before{content:\"\";box-sizing:border-box;position:absolute;top:0;left:0;width:34px;height:100%}.loginBtn:focus{outline:0}.loginBtn:active{box-shadow:inset 0 0 0 32px rgba(0,0,0,.1)}.shareBtn{box-sizing:border-box;position:relative;margin:.2em;padding:0 15px 0 46px;border:none;text-align:left;line-height:34px;white-space:nowrap;border-radius:3px;font-size:16px;color:#fff}.shareBtn:before{content:\"\";box-sizing:border-box;position:absolute;top:0;left:0;width:34px;height:100%}.shareBtn:focus{outline:0}.shareBtn:active{box-shadow:inset 0 0 0 32px rgba(0,0,0,.1)}.--facebook{background-color:#4c69ba;background-image:linear-gradient(#4c69ba,#3b55a0);text-shadow:0 -1px 0 #354c8c}.--facebook:before{border-right:1px solid #364e92;background:url(https://s3-us-west-2.amazonaws.com/s.cdpn.io/14082/icon_facebook.png) 6px 6px no-repeat}.--facebook:focus,.--facebook:hover{background-color:#5b7bd5;background-image:linear-gradient(#5b7bd5,#4864b1)}.--google{background:#dd4b39}.--google:before{border-right:1px solid #bb3f30;background:url(https://s3-us-west-2.amazonaws.com/s.cdpn.io/14082/icon_google.png) 6px 6px no-repeat}.--google:focus,.--google:hover{background:#e74b37}.--linkedin{background:#007bb6}.--linkedin:before{border-right:1px solid #007bb6;background:url(https://content.linkedin.com/content/dam/developer/global/en_US/site/img/signin-button.png) -3px -3px no-repeat}.--linkedin:focus,.--linkedin:hover{background:linear-gradient(#007bb6,#4864b1)}.social-btn{width:50px;height:50px;background-size:cover;background-repeat:no-repeat;cursor:pointer;border-radius:10px;border:none}.social-btn.facebook{background-image:url(https://raw.githubusercontent.com/JohnnieLi/ngx-social-button/master/assets/facebook.png)}.social-btn.google{background-image:url(https://raw.githubusercontent.com/JohnnieLi/ngx-social-button/master/assets/google.png)}.social-btn.linkedin{background-image:url(https://raw.githubusercontent.com/JohnnieLi/ngx-social-button/master/assets/LinkedIn.png)}.social-btn.wechat{background-image:url(https://github.com/JohnnieLi/ngx-social-button/blob/master/assets/wechat.png?raw=true)}`],\n})\nexport class FacebookSharingButton implements OnInit {\n\n    @Input() share: any = null;\n    @Output() response = new EventEmitter<Boolean>();\n\n    constructor(private socialAuthService: SocialService,\n     @Inject(DOCUMENT) private document: any) { }\n\n    ngOnInit() {\n\n    }\n\n    public sharing() {\n        console.log(this.document.location.href);\n        if(!this.share){\n            this.share = {href:this.document.location.href}\n        }else if(!this.share.href){\n            this.share.href = this.document.location.href\n        }\n        this.socialAuthService.facebookSharing(this.share).then(()=>{\n            this.response.emit(true);\n        }).catch((err)=>{\n            this.response.emit(false);\n        });\n    }\n\n}\n",
    "import {\n    Component, OnInit, Input, Output, EventEmitter, Inject, ElementRef, ViewChild,\n    AfterViewInit\n} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\n\nimport {SocialService} from '../social.service';\n\n@Component({\n    selector: 'linkedin-share-button',\n    template: `\n        <span #element></span>\n    `,\n})\nexport class LinkedinSharingButton implements AfterViewInit {\n\n    @Input() share: any = {href: location.href};\n    @Output() response = new EventEmitter<Boolean>();\n    @ViewChild('element') element: ElementRef;\n\n    constructor(private socialAuthService: SocialService,\n                @Inject(DOCUMENT) private document: any) {\n    }\n\n    ngAfterViewInit() {\n        // add linkedin share button script tag to element\n        this.element.nativeElement.innerHTML = `<script type=\"IN/Share\" data-url=\"${this.share.href}\"></script>`;\n        // render share button\n        // window['IN'] && window['IN'].parse();\n    }\n\n}\n",
    "import { NgModule } from '@angular/core';\nimport { FacebookLoginButton } from './buttons/facebookLoginButton';\nimport { GoogleLoginButton } from './buttons/googleLoginButton';\nimport {FacebookSharingButton} from './buttons/facebookSharingButton';\nimport {LinkedinLoginButton} from './buttons/linkedinLoginButton';\nimport {LinkedinSharingButton} from './buttons/linkedinSharingButton';\n\n@NgModule({\n    imports: [\n\n    ],\n    declarations: [FacebookLoginButton, GoogleLoginButton,\n        FacebookSharingButton, LinkedinLoginButton,\n        LinkedinSharingButton],\n    exports: [FacebookLoginButton, GoogleLoginButton,\n        FacebookSharingButton, LinkedinLoginButton,\n        LinkedinSharingButton]\n})\nexport class NgxSocialButtonModule { }\n"
  ],
  "names": [
    "tslib_1.__extends"
  ],
  "mappings": "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"
}
